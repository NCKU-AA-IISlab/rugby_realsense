/*********************************************************************
*
* Software License Agreement (BSD License)
*
*  Copyright (c) 2017, (ROC) Advanced Robotics, Ltd.
*  All rights reserved.
*
*  Redistribution and use in source and binary forms, with or without
*  modification, are permitted provided that the following conditions
*  are met:
*
*   * Redistributions of source code must retain the above copyright
*     notice, this list of conditions and the following disclaimer.
*   * Redistributions in binary form must reproduce the above
*     copyright notice, this list of conditions and the following
*     disclaimer in the documentation and/or other materials provided
*     with the distribution.
*   * Neither the name of Advanced Robotics, Ltd. nor the names of its
*     contributors may be used to endorse or promote products derived
*     from this software without specific prior written permission.
*
*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
*  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
*  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
*  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
*  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
*  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
*  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
*  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
*  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
*  POSSIBILITY OF SUCH DAMAGE.
*
* Author: HaoChih, LIN
* Email: f44006076@gmail.com
*********************************************************************/

#include <ros/ros.h>
#include <sensor_msgs/Image.h>
#include <sensor_msgs/image_encodings.h>
#include <iostream>
#include <nodelet/nodelet.h>


namespace rugby_realsense {

class DepthChangeEncode : public nodelet::Nodelet
{                
  ros::Subscriber depth_sub;			     
  ros::Publisher depth_pub;                   
  virtual void onInit();
  void depth_callback(const sensor_msgs::ImageConstPtr& depth_origin);
};


void DepthChangeEncode::onInit()
{
  ros::NodeHandle& nh_ = getNodeHandle();
  depth_sub = nh_.subscribe("/depth_in", 1, &DepthChangeEncode::depth_callback, this);
  depth_pub = nh_.advertise<sensor_msgs::Image>("/depth_out",10, true);
}


void DepthChangeEncode::depth_callback(const sensor_msgs::ImageConstPtr& depth_origin)
{
  sensor_msgs::Image::Ptr depth_new(new sensor_msgs::Image);
  depth_new->header = depth_origin->header;
  depth_new->height = depth_origin->height;
  depth_new->width = depth_origin->width;
  depth_new->step = depth_origin->step;
  depth_new->data = depth_origin->data;
  depth_new->is_bigendian = depth_origin->is_bigendian;
  depth_new->encoding = 

  
  // Publish the result
  depth_pub.publish(pcd_valid);
}

} //namespace rugby_realsense

// Register as nodelet
#include <pluginlib/class_list_macros.h>
PLUGINLIB_EXPORT_CLASS(rugby_realsense::DepthChangeEncode, nodelet::Nodelet);
