
<launch>
  <!-- Your RGB-D sensor should be already started with "depth_registration:=true".
        Examples:
           $ roslaunch freenect_launch freenect.launch depth_registration:=true 
           $ roslaunch openni2_launch openni2.launch depth_registration:=true -->
 
  <!-- Choose visualization -->
  <arg name="rviz"                    default="false" />
  <arg name="rtabmapviz"              default="false" /> 
  
  <!-- Localization-only mode -->
  <arg name="localization"            default="false"/>
  
  <!-- Corresponding config files -->
  <arg name="rtabmapviz_cfg"          default="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" />
  <arg name="rviz_cfg"                default="-d $(find rtabmap_ros)/launch/config/rgbd.rviz" />
  
  <arg name="frame_id"                default="camera_link"/>   <!-- Fixed frame id, you may set "base_link" or "base_footprint" if they are published -->
  <arg name="time_threshold"          default="0"/>             <!-- (ms) If not 0 ms, memory management is used to keep processing time on this fixed limit. -->
  <arg name="optimize_from_last_node" default="false"/>         <!-- Optimize the map from the last node. Should be true on multi-session mapping and when time threshold is set -->
  <arg name="database_path"           default="~/.ros/rtabmap.db"/>
  <arg name="rtabmap_args"            default="--delete_db_on_start"/>              <!-- delete_db_on_start, udebug -->
  <arg name="launch_prefix"           default=""/>              <!-- for debugging purpose, it fills launch-prefix tag of the nodes -->
   
  <arg name="rgb_topic"               default="/camera/color/image_rect_color" />
  <arg name="depth_registered_topic"  default="/camera/depth_registered/sw_registered/image_rect_raw" />
  <arg name="camera_info_topic"       default="/camera/color/camera_info" />
  <arg name="compressed"              default="false"/>
  <arg name="convert_depth_to_mm"     default="true"/>
   
  <arg name="subscribe_scan"          default="false"/>         <!-- Assuming 2D scan if set, rtabmap will do 3DoF mapping instead of 6DoF -->
  <arg name="scan_topic"              default="/scan"/>
  
  <arg name="subscribe_scan_cloud"    default="false"/>         <!-- Assuming 3D scan if set -->
  <arg name="scan_cloud_topic"        default="/scan_cloud"/>
  
  <arg name="visual_odometry"         default="false"/>          <!-- Generate visual odometry -->
  <arg name="odom_topic"              default="/rugby/odom_ekf"/>         <!-- Odometry topic used if visual_odometry is false -->
   
  <arg name="namespace"               default="rtabmap"/>
  <arg name="wait_for_transform"      default="0.2"/>
  
  <!-- Nodes -->
  <group ns="$(arg namespace)">
  
    <node if="$(arg compressed)" name="republish_rgb"   type="republish" pkg="image_transport" args="compressed in:=$(arg rgb_topic) raw out:=$(arg rgb_topic)" />
    <node if="$(arg compressed)" name="republish_depth" type="republish" pkg="image_transport" args="compressedDepth in:=$(arg depth_registered_topic) raw out:=$(arg depth_registered_topic)" />
  
    <!-- Odometry -->
    <!-- Subscribe the /rugby/odom_ekf from Rugby wheel odometry fused with imu -->
    <node pkg="tf" type="static_transform_publisher" name="RugbyBase2camera" args="-0.035 -0.03 0.28 0 0 0 rugby_base camera_link 50" />
  
    <!-- Visual SLAM (robot side) -->
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg rtabmap_args)" launch-prefix="$(arg launch_prefix)">
	<param name="subscribe_depth"             type="bool"   value="true"/>
	<param name="subscribe_scan"              type="bool"   value="$(arg subscribe_scan)"/>
	<param name="subscribe_scan_cloud"        type="bool"   value="$(arg subscribe_scan_cloud)"/>
	<param name="frame_id"                    type="string" value="$(arg frame_id)"/>
	<param name="wait_for_transform_duration" type="double" value="$(arg wait_for_transform)"/>
	<param name="database_path"               type="string" value="$(arg database_path)"/>

	<remap from="rgb/image"       to="$(arg rgb_topic)"/>
	<remap from="depth/image"     to="$(arg depth_registered_topic)"/>
	<remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
	<remap from="scan"            to="$(arg scan_topic)"/>
	<remap from="scan_cloud"      to="$(arg scan_cloud_topic)"/>
	<remap unless="$(arg visual_odometry)" from="odom"  to="$(arg odom_topic)"/>

	<param name="Rtabmap/TimeThr"              type="string" value="$(arg time_threshold)"/>
	<param name="RGBD/OptimizeFromGraphEnd"    type="string" value="$(arg optimize_from_last_node)"/>
	<param name="Mem/SaveDepth16Format"        type="string" value="$(arg convert_depth_to_mm)"/>
	<param name="Grid/DepthDecimation"         type="string" value="4"/>
	<param name="Grid/FlatObstacleDetected"    type="string" value="true"/>
	<param name="Kp/MaxFeatures"               type="string" value="500"/>
	<param name="Kp/MaxDepth"                  type="string" value="10"/>
	<param name="Kp/DetectorStrategy"          type="string" value="2"/>   <!-- "0=SURF 1=SIFT 2=ORB 3=FAST/FREAK 4=FAST/BRIEF 5=GFTT/FREAK 6=GFTT/BRIEF 7=BRISK 8=GFTT/ORB 9=FREAK."-->
	<param name="Vis/EstimationType"           type="string" value="0"/>   <!-- 0=3D->3D, 1=3D->2D (PnP) -->
	<param name="Vis/MaxDepth"                 type="string" value="10"/>
	<param name="Vis/FeatureType"		   type="string" value="6" /> <!-- "0=SURF 1=SIFT 2=ORB 3=FAST/FREAK 4=FAST/BRIEF 5=GFTT/FREAK 6=GFTT/BRIEF 7=BRISK 8=GFTT/ORB 9=FREAK.") -->
	<param name="Vis/MaxFeatures"               type="string" value="1000"/>

	<!-- localization mode -->
	<param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
	<param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
	<param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/>

	<!-- when 2D scan is set -->
	<!-- param if="$(arg subscribe_scan)" name="Optimizer/Slam2D"        type="string" value="true"/ -->
	<!-- param if="$(arg subscribe_scan)" name="Icp/CorrespondenceRatio" type="string" value="0.25"/ -->
	<param if="$(arg subscribe_scan)" name="Reg/Strategy"            type="string" value="0"/> <!-- 0=Vis, 1=Icp, 2=VisIcp -->
	<param if="$(arg subscribe_scan)" name="Reg/Force3DoF"           type="string" value="true"/>

	<!-- when 3D scan is set -->
	<param if="$(arg subscribe_scan_cloud)" name="Reg/Strategy"      type="string" value="1"/>
    </node>
   
  </group>
  
</launch>
